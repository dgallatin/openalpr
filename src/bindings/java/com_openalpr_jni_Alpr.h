/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_openalpr_jni_Alpr */

#ifndef _Included_com_openalpr_jni_Alpr
#define _Included_com_openalpr_jni_Alpr
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    initialize
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_openalpr_jni_Alpr_initialize
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    dispose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_openalpr_jni_Alpr_dispose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    native_recognize
 * Signature: (JLjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_openalpr_jni_Alpr_native_1recognize__JLjava_lang_String_2
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    native_recognize
 * Signature: (J[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_openalpr_jni_Alpr_native_1recognize__J_3B
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    native_recognize
 * Signature: (JJIII)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_openalpr_jni_Alpr_native_1recognize__JJIII
  (JNIEnv *, jobject, jlong, jlong, jint, jint, jint);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    set_default_region
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_openalpr_jni_Alpr_set_1default_1region
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    detect_region
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_openalpr_jni_Alpr_detect_1region
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    set_top_n
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_openalpr_jni_Alpr_set_1top_1n
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     com_openalpr_jni_Alpr
 * Method:    get_version
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_openalpr_jni_Alpr_get_1version
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
